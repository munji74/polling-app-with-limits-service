server:
  port: 8083

spring:
  application:
    name: poll-service
  config:
    import: optional:configserver:http://localhost:8888
  # Fallback local datasource in case config-server is down
  datasource:
    url: ${DB_URL:jdbc:mariadb://localhost:3306/polldb}
    username: ${DB_USERNAME:app}
    password: ${DB_PASSWORD:app}
    driver-class-name: org.mariadb.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MariaDBDialect
        jdbc:
          time_zone: Africa/Kampala
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
    time-zone: Africa/Kampala

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
  tracing:
    enabled: true
    sampling:
      probability: 1.0
# Note: OTLP exporter endpoint intentionally not set here to avoid creating the exporter when undefined.
# To enable OTLP export, use the 'otel' profile or set management.otlp.tracing.endpoint via environment.

logging:
  pattern:
    level: "%5p [${spring.application.name:},traceId=%mdc{traceId:-},spanId=%mdc{spanId:-}]"

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
    registerWithEureka: true
    fetchRegistry: true
  instance:
    preferIpAddress: true
